import { SvelteComponent } from "svelte";
import type { ButtonColorType, SizeType } from '../types';
declare const __propDef: {
    props: {
        [x: string]: any;
        group?: string | number | undefined;
        value?: string | number | undefined;
        inline?: boolean | undefined;
        pill?: boolean | undefined;
        outline?: boolean | undefined;
        size?: SizeType | undefined;
        color?: ButtonColorType | undefined;
        shadow?: boolean | undefined;
    };
    events: {
        keyup: KeyboardEvent;
        keydown: KeyboardEvent;
        keypress: KeyboardEvent;
        focus: FocusEvent;
        blur: FocusEvent;
        click: MouseEvent;
        mouseover: MouseEvent;
        mouseenter: MouseEvent;
        mouseleave: MouseEvent;
        paste: ClipboardEvent;
        change: Event;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type RadioButtonProps = typeof __propDef.props;
export type RadioButtonEvents = typeof __propDef.events;
export type RadioButtonSlots = typeof __propDef.slots;
/**
 * [Go to docs](https://flowbite-svelte.com/)
 * ## Props
 * @prop export let group: string | number = '';
 * @prop export let value: string | number = '';
 * @prop export let inline: boolean = true;
 * @prop export let pill: boolean = false;
 * @prop export let outline: boolean = false;
 * @prop export let size: SizeType | undefined = undefined;
 * @prop export let color: ButtonColorType | undefined = undefined;
 * @prop export let shadow: boolean = false;
 */
export default class RadioButton extends SvelteComponent<RadioButtonProps, RadioButtonEvents, RadioButtonSlots> {
}
export {};
//# sourceMappingURL=RadioButton.svelte.d.ts.map