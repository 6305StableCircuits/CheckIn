{
  "version": 3,
  "sources": ["../../@tanstack/svelte-table/src/placeholder.svelte", "../../@tanstack/svelte-table/src/placeholder.ts", "../../@tanstack/svelte-table/src/render-component.ts", "../../@tanstack/svelte-table/src/index.ts"],
  "sourcesContent": ["<script>\nexport let content;\n</script>\n\n{content}", "import type { SvelteComponentDev } from 'svelte/internal'\nimport { create_ssr_component, escape } from 'svelte/internal'\nimport PlaceholderClient from './placeholder.svelte'\n\ntype X = typeof PlaceholderClient\n\nconst PlaceholderServer = create_ssr_component(\n  ($$result: any, $$props: any, $$bindings: any, slots: any) => {\n    return `${escape($$props.content)}`\n  }\n) as any as typeof SvelteComponentDev\n\nexport default typeof document === 'undefined'\n  ? PlaceholderServer\n  : PlaceholderClient\n", "import type { ComponentType, ComponentProps } from 'svelte'\nimport {\n  SvelteComponent,\n  claim_component,\n  create_component,\n  destroy_component,\n  init,\n  mount_component,\n  noop,\n  safe_not_equal,\n  transition_in,\n  transition_out,\n  create_ssr_component,\n  validate_component,\n} from 'svelte/internal'\n\nfunction create_fragment(ctx: any, Comp: any, props: any) {\n  let c: any\n  let current: any\n  c = new Comp({ props, $$inline: true })\n\n  return {\n    c() {\n      create_component(c.$$.fragment)\n    },\n    l(nodes: any) {\n      claim_component(c.$$.fragment, nodes)\n    },\n    m(target: any, anchor: any) {\n      // @ts-ignore\n      mount_component(c, target, anchor)\n      current = true\n    },\n    p: noop,\n    i(local: any) {\n      if (current) return\n      transition_in(c.$$.fragment, local)\n      current = true\n    },\n    o(local: any) {\n      transition_out(c.$$.fragment, local)\n      current = false\n    },\n    d(detaching: any) {\n      destroy_component(c, detaching)\n    },\n  }\n}\n\nfunction renderClient<T>(\n  Comp: T,\n  props: T extends ComponentType<infer C> ? ComponentProps<C> : any\n) {\n  return class WrapperComp extends SvelteComponent {\n    constructor(options: any) {\n      super()\n      init(\n        this,\n        options,\n        null,\n        (ctx: any) => create_fragment(ctx, Comp, props),\n        safe_not_equal,\n        {},\n        undefined\n      )\n    }\n  } as ComponentType\n}\n\nfunction renderServer<T>(\n  Comp: T,\n  props: T extends ComponentType<infer C> ? ComponentProps<C> : any\n) {\n  const WrapperComp = create_ssr_component(\n    ($$result: any, $$props: any, $$bindings: any, slots: any) => {\n      return `${validate_component(Comp, 'TableComponent').$$render(\n        $$result,\n        props,\n        {},\n        {}\n      )}`\n    }\n  )\n\n  return WrapperComp as unknown as ComponentType\n}\n\nexport const renderComponent =\n  typeof window === 'undefined' ? renderServer : renderClient\n", "import {\n  RowData,\n  createTable,\n  TableOptions,\n  TableOptionsResolved,\n} from '@tanstack/table-core'\nimport Placeholder from './placeholder'\nimport type { ComponentType } from 'svelte'\nimport { SvelteComponent } from 'svelte/internal'\nimport { readable, writable, derived, Readable, get } from 'svelte/store'\nimport { renderComponent } from './render-component'\n\nexport { renderComponent } from './render-component'\n\nexport * from '@tanstack/table-core'\n\nfunction isSvelteServerComponent(component: any) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$render === 'function' &&\n    typeof component.render === 'function'\n  )\n}\n\nfunction isSvelteClientComponent(component: any) {\n  let isHMR = '__SVELTE_HMR' in window\n\n  return (\n    component.prototype instanceof SvelteComponent ||\n    (isHMR &&\n      component.name?.startsWith('Proxy<') &&\n      component.name?.endsWith('>'))\n  )\n}\n\nfunction isSvelteComponent(component: any) {\n  if (typeof document === 'undefined') {\n    return isSvelteServerComponent(component)\n  } else {\n    return isSvelteClientComponent(component)\n  }\n}\n\nfunction wrapInPlaceholder(content: any) {\n  return renderComponent(Placeholder, { content })\n}\n\nexport function flexRender(component: any, props: any): ComponentType | null {\n  if (!component) return null\n\n  if (isSvelteComponent(component)) {\n    return renderComponent(component, props)\n  }\n\n  if (typeof component === 'function') {\n    const result = component(props)\n    if (result === null || result === undefined) return null\n\n    if (isSvelteComponent(result)) {\n      return renderComponent(result, props)\n    }\n\n    return wrapInPlaceholder(result)\n  }\n\n  return wrapInPlaceholder(component)\n}\n\ntype ReadableOrVal<T> = T | Readable<T>\n\nexport function createSvelteTable<TData extends RowData>(\n  options: ReadableOrVal<TableOptions<TData>>\n) {\n  let optionsStore: Readable<TableOptions<TData>>\n\n  if ('subscribe' in options) {\n    optionsStore = options\n  } else {\n    optionsStore = readable(options)\n  }\n\n  let resolvedOptions: TableOptionsResolved<TData> = {\n    state: {}, // Dummy state\n    onStateChange: () => {}, // noop\n    renderFallbackValue: null,\n    ...get(optionsStore),\n  }\n\n  let table = createTable(resolvedOptions)\n\n  let stateStore = writable(/** @type {number} */ table.initialState)\n  // combine stores\n  let stateOptionsStore = derived([stateStore, optionsStore], s => s)\n  const tableReadable = readable(table, function start(set) {\n    const unsubscribe = stateOptionsStore.subscribe(([state, options]) => {\n      table.setOptions(prev => {\n        return {\n          ...prev,\n          ...options,\n          state: { ...state, ...options.state },\n          // Similarly, we'll maintain both our internal state and any user-provided\n          // state.\n          onStateChange: updater => {\n            if (updater instanceof Function) {\n              stateStore.update(updater)\n            } else {\n              stateStore.set(updater)\n            }\n\n            resolvedOptions.onStateChange?.(updater)\n          },\n        }\n      })\n\n      // it didn't seem to rerender without setting the table\n      set(table)\n    })\n\n    return function stop() {\n      unsubscribe()\n    }\n  })\n\n  return tableReadable\n}\n"],
  "mappings": "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",
  "names": ["ctx", "PlaceholderServer", "create_ssr_component", "$$result", "$$props", "$$bindings", "slots", "escape", "content", "document", "PlaceholderClient", "create_fragment", "Comp", "props", "c", "current", "$$inline", "create_component", "$$", "fragment", "l", "nodes", "claim_component", "m", "target", "anchor", "mount_component", "p", "noop", "i", "local", "transition_in", "o", "transition_out", "d", "detaching", "destroy_component", "renderClient", "WrapperComp", "SvelteComponent", "constructor", "options", "init", "safe_not_equal", "undefined", "renderServer", "validate_component", "$$render", "renderComponent", "window", "isSvelteServerComponent", "component", "render", "isSvelteClientComponent", "_component$name", "_component$name2", "isHMR", "prototype", "name", "startsWith", "endsWith", "isSvelteComponent", "wrapInPlaceholder", "Placeholder", "flexRender", "result", "createSvelteTable", "optionsStore", "readable", "resolvedOptions", "state", "onStateChange", "renderFallbackValue", "get", "table", "createTable", "stateStore", "writable", "initialState", "stateOptionsStore", "derived", "s", "tableReadable", "start", "set", "unsubscribe", "subscribe", "_ref", "setOptions", "prev", "updater", "Function", "update", "stop"]
}
