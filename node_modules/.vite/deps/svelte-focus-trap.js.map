{
  "version": 3,
  "sources": ["../../svelte-focus-trap/src/index.js", "../../svelte-focus-trap/src/utils.js"],
  "sourcesContent": ["import Mousetrap from 'mousetrap';\nimport {\n  runInSeries, \n  elementIsVisible, \n  FOCUSABLE_ELEMENTS, \n} from './utils.js';\n\nexport function focusTrap(node) {\n  const keyboardShortcuts = {\n    'alt+tab': previous,\n    'end': focusLastItem,\n    'home': focusFirstItem,\n    'shift+tab': previous,\n    down: next,\n    tab: next,\n    up: previous,\n  };\n\n  Object.entries(keyboardShortcuts).forEach(([keys, handler]) => {\n    Mousetrap.bind(keys, runInSeries([\n      (event) => ({ event }),\n      preventDefault,\n      stopPropagation,\n      getAllFocusableChildren,\n      getCurrentlyFocusedItem,\n      handler,\n    ]));\n  });\n\n  function preventDefault(context) {\n    context.event.preventDefault();\n    return context;\n  }\n\n  function stopPropagation(context) {\n    context.event.stopPropagation();\n    return context;\n  }\n\n  function getAllFocusableChildren(context) {\n    let focusables = [...node.querySelectorAll(FOCUSABLE_ELEMENTS)]; // NodeList to Array\n    return {\n      ...context,\n      allFocusableItems: focusables.filter(elementIsVisible),\n    };\n  }\n\n  function getCurrentlyFocusedItem(context) {\n    let currentlyFocusedItem = document.activeElement;\n\n    if (currentlyFocusedItem && !node.contains(currentlyFocusedItem)) {\n      return context;\n    }\n\n    return {\n      ...context,\n      currentlyFocusedItem,\n    };\n  }\n\n  function next({ allFocusableItems, currentlyFocusedItem }) {\n    // if focus is not within the focuables, focus the first one.\n    if (!currentlyFocusedItem) {\n      allFocusableItems[0] && allFocusableItems[0].focus();\n      return;\n    }\n\n    let currentlyFocusedIndex = allFocusableItems.indexOf(currentlyFocusedItem);\n\n    // If we have focus on the last one, give focus on the first.\n    if ((allFocusableItems.length - 1) === currentlyFocusedIndex) {\n      allFocusableItems[0] && allFocusableItems[0].focus();\n      return;\n    }\n\n    // Focus the next one.\n    allFocusableItems[currentlyFocusedIndex + 1] && allFocusableItems[currentlyFocusedIndex + 1].focus();\n  }\n\n  function previous({ allFocusableItems, currentlyFocusedItem }) {\n    // If focus is not within the focusables, focus the last one\n    if (!currentlyFocusedItem) {\n      allFocusableItems[allFocusableItems.length - 1].focus();\n      return;\n    }\n\n    let currentlyFocusedIndex = allFocusableItems.indexOf(currentlyFocusedItem);\n\n    // If we have focus on the first one, wrap to the end one.\n    if (currentlyFocusedIndex === 0) {\n      allFocusableItems[allFocusableItems.length - 1] && allFocusableItems[allFocusableItems.length - 1].focus();\n      return;\n    }\n\n    // Focus the previous one.\n    allFocusableItems[currentlyFocusedIndex - 1] && allFocusableItems[currentlyFocusedIndex - 1].focus();\n  }\n\n  function focusFirstItem({ allFocusableItems }) {\n    allFocusableItems[0] && allFocusableItems[0].focus();\n  }\n\n  function focusLastItem({ allFocusableItems }) {\n    allFocusableItems[allFocusableItems.length - 1].focus();\n  } \n\n  return {\n    destroy() {\n      Object.keys(keyboardShortcuts).forEach((key) => Mousetrap.unbind(key));\n    }\n  };\n}", "export function runInSeries(tasks) {\n  return (...initialArgs) => {\n    return tasks.reduce((memo, task) => memo = [...[task(...memo)]], initialArgs || []);\n  }\n}\n\nexport function elementIsVisible(element) {\n  let computedStyle = document.defaultView.getComputedStyle(element, null);\n\n  return computedStyle.getPropertyValue('display') !== 'none' && computedStyle.getPropertyValue('visibility') !== 'hidden';\n}\n\n// A list of selectors to select all known focusable elements\nexport const FOCUSABLE_ELEMENTS = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n  'select:not([disabled]):not([aria-hidden])',\n  'textarea:not([disabled]):not([aria-hidden])',\n  'button:not([disabled]):not([aria-hidden])',\n  'iframe',\n  'object',\n  'embed',\n  '[contenteditable]',\n  '[tabindex]:not([tabindex^=\"-\"])',\n];\n\n\n"],
  "mappings": "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",
  "names": ["Mousetrap"]
}
